{"ast":null,"code":"import auth0 from \"auth0-js\";\nexport default class Auth {\n  constructor(history) {\n    this.login = () => {\n      this.auth0.authorize();\n    };\n\n    this.history = history;\n    this.auth0 = new auth0.WebAuth({\n      domain: process.env.REACT_APP_AUTH0_DOMAIN,\n      clientID: process.env.REACT_APP_AUTH0_CLIENT_ID,\n      redirectUri: process.env.REACT_APP_AUTH0_CALLBACK_URL,\n      responseType: \"token id_token\",\n      scope: \"openid profile email\"\n    });\n  } // handleAuthentication = () => {\n  //   this.auth0.parseHash((err, authResult) => {\n  //     if (authResult && authResult.accessToken && authResult.idToken) {\n  //       this.setSession(authResult);\n  //       this.history.push(\"/\");\n  //     } else if (err) {\n  //       this.history.push(\"/\");\n  //       alert(`Error: ${err.error}. Check the console for further details.`);\n  //       console.log(err);\n  //     }\n  //   });\n  // };\n  // setSession = authResult => {\n  //   console.log(authResult);\n  //   // set the time that the access token will expire\n  //   const expiresAt = JSON.stringify(\n  //     authResult.expiresIn * 1000 + new Date().getTime()\n  //   );\n  //   localStorage.setItem(\"access_token\", authResult.accessToken);\n  //   localStorage.setItem(\"id_token\", authResult.idToken);\n  //   localStorage.setItem(\"expires_at\", expiresAt);\n  // };\n  // isAuthenticated() {\n  //   const expiresAt = JSON.parse(localStorage.getItem(\"expires_at\"));\n  //   return new Date().getTime() < expiresAt;\n  // }\n\n\n}","map":{"version":3,"sources":["/Users/rupertpaterson/Monash_Bootcamp/React Auth0/dashboard/src/Auth/Auth.js"],"names":["auth0","Auth","constructor","history","login","authorize","WebAuth","domain","process","env","REACT_APP_AUTH0_DOMAIN","clientID","REACT_APP_AUTH0_CLIENT_ID","redirectUri","REACT_APP_AUTH0_CALLBACK_URL","responseType","scope"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,UAAlB;AAEA,eAAe,MAAMC,IAAN,CAAW;AACxBC,EAAAA,WAAW,CAACC,OAAD,EAAU;AAAA,SAWrBC,KAXqB,GAWb,MAAM;AACZ,WAAKJ,KAAL,CAAWK,SAAX;AACD,KAboB;;AACnB,SAAKF,OAAL,GAAeA,OAAf;AACA,SAAKH,KAAL,GAAa,IAAIA,KAAK,CAACM,OAAV,CAAkB;AAC7BC,MAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,sBADS;AAE7BC,MAAAA,QAAQ,EAAEH,OAAO,CAACC,GAAR,CAAYG,yBAFO;AAG7BC,MAAAA,WAAW,EAAEL,OAAO,CAACC,GAAR,CAAYK,4BAHI;AAI7BC,MAAAA,YAAY,EAAE,gBAJe;AAK7BC,MAAAA,KAAK,EAAE;AALsB,KAAlB,CAAb;AAOD,GAVuB,CAgBxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AA5CwB","sourcesContent":["import auth0 from \"auth0-js\";\n\nexport default class Auth {\n  constructor(history) {\n    this.history = history;\n    this.auth0 = new auth0.WebAuth({\n      domain: process.env.REACT_APP_AUTH0_DOMAIN,\n      clientID: process.env.REACT_APP_AUTH0_CLIENT_ID,\n      redirectUri: process.env.REACT_APP_AUTH0_CALLBACK_URL,\n      responseType: \"token id_token\",\n      scope: \"openid profile email\"\n    });\n  }\n\n  login = () => {\n    this.auth0.authorize();\n  };\n\n  // handleAuthentication = () => {\n  //   this.auth0.parseHash((err, authResult) => {\n  //     if (authResult && authResult.accessToken && authResult.idToken) {\n  //       this.setSession(authResult);\n  //       this.history.push(\"/\");\n  //     } else if (err) {\n  //       this.history.push(\"/\");\n  //       alert(`Error: ${err.error}. Check the console for further details.`);\n  //       console.log(err);\n  //     }\n  //   });\n  // };\n\n  // setSession = authResult => {\n  //   console.log(authResult);\n  //   // set the time that the access token will expire\n  //   const expiresAt = JSON.stringify(\n  //     authResult.expiresIn * 1000 + new Date().getTime()\n  //   );\n\n  //   localStorage.setItem(\"access_token\", authResult.accessToken);\n  //   localStorage.setItem(\"id_token\", authResult.idToken);\n  //   localStorage.setItem(\"expires_at\", expiresAt);\n  // };\n\n  // isAuthenticated() {\n  //   const expiresAt = JSON.parse(localStorage.getItem(\"expires_at\"));\n  //   return new Date().getTime() < expiresAt;\n  // }\n}"]},"metadata":{},"sourceType":"module"}