{"ast":null,"code":"import auth0 from \"auth0-js\";\nexport default class Auth {\n  constructor(history) {\n    this.login = () => {\n      this.auth0.authorize();\n    };\n\n    this.handleAuthentication = () => {\n      this.auth0.parseHash((err, authResult) => {\n        if (authResult && authResult.accessToken && authResult.idToken) {\n          this.setSession(authResult);\n          this.history.push(\"/\");\n        } else if (err) {\n          this.history.push(\"/\");\n          alert(`Error: ${err.error}. Check the console for further details.`);\n          console.log(err);\n        }\n      });\n    };\n\n    this.setSession = authResult => {\n      console.log(authResult); // set the time that the access token will expire\n\n      const expiresAt = JSON.stringify(authResult.expiresIn * 1000 + new Date().getTime());\n      localStorage.setItem(\"access_token\", authResult.accessToken);\n      localStorage.setItem(\"id_token\", authResult.idToken);\n      localStorage.setItem(\"expires_at\", expiresAt);\n    };\n\n    this.logout = () => {\n      localStorage.removeItem(\"access_token\");\n      localStorage.removeItem(\"id_token\");\n      localStorage.removeItem(\"expires_at\");\n      this.auth0.logout({\n        clientID: process.env.REACT_APP_AUTH0_CLIENT_ID,\n        returnTo: \"http://localhost:3000\"\n      });\n    };\n\n    this.getAccessToken = () => {\n      const accessToken = localStorage.getItem(\"access_token\");\n\n      if (!accessToken) {\n        throw new Error(\"No access token found.\");\n      }\n\n      return accessToken;\n    };\n\n    this.getProfile = cb => {\n      if (this.userProfile) return cb(this.userProfile);\n      this.auth0.client.userInfo(this.getAccessToken(), (err, profile) => {\n        if (profile) this.userProfile = profile;\n        cb(profile, err);\n      });\n    };\n\n    this.history = history;\n    this.userProfile = null;\n    this.auth0 = new auth0.WebAuth({\n      domain: process.env.REACT_APP_AUTH0_DOMAIN,\n      clientID: process.env.REACT_APP_AUTH0_CLIENT_ID,\n      redirectUri: process.env.REACT_APP_AUTH0_CALLBACK_URL,\n      audience: process.env.REACT_APP_AUTH0_AUDIENCE,\n      responseType: \"token id_token\",\n      scope: \"openid profile email\"\n    });\n  }\n\n  isAuthenticated() {\n    const expiresAt = JSON.parse(localStorage.getItem(\"expires_at\"));\n    return new Date().getTime() < expiresAt;\n  }\n\n}","map":{"version":3,"sources":["/Users/rupertpaterson/Monash_Bootcamp/homework/React_Auth0/src/Auth/Auth.js"],"names":["auth0","Auth","constructor","history","login","authorize","handleAuthentication","parseHash","err","authResult","accessToken","idToken","setSession","push","alert","error","console","log","expiresAt","JSON","stringify","expiresIn","Date","getTime","localStorage","setItem","logout","removeItem","clientID","process","env","REACT_APP_AUTH0_CLIENT_ID","returnTo","getAccessToken","getItem","Error","getProfile","cb","userProfile","client","userInfo","profile","WebAuth","domain","REACT_APP_AUTH0_DOMAIN","redirectUri","REACT_APP_AUTH0_CALLBACK_URL","audience","REACT_APP_AUTH0_AUDIENCE","responseType","scope","isAuthenticated","parse"],"mappings":"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","sourcesContent":["import auth0 from \"auth0-js\";\n\nexport default class Auth {\n  constructor(history) {\n    this.history = history;\n    this.userProfile = null;\n    this.auth0 = new auth0.WebAuth({\n      domain: process.env.REACT_APP_AUTH0_DOMAIN,\n      clientID: process.env.REACT_APP_AUTH0_CLIENT_ID,\n      redirectUri: process.env.REACT_APP_AUTH0_CALLBACK_URL,\n      audience: process.env.REACT_APP_AUTH0_AUDIENCE,\n      responseType: \"token id_token\",\n      scope: \"openid profile email\"\n    });\n  }\n\n  login = () => {\n    this.auth0.authorize();\n  };\n\n  handleAuthentication = () => {\n    this.auth0.parseHash((err, authResult) => {\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        this.setSession(authResult);\n        this.history.push(\"/\");\n      } else if (err) {\n        this.history.push(\"/\");\n        alert(`Error: ${err.error}. Check the console for further details.`);\n        console.log(err);\n      }\n    });\n  };\n\n  setSession = authResult => {\n    console.log(authResult);\n    // set the time that the access token will expire\n    const expiresAt = JSON.stringify(\n      authResult.expiresIn * 1000 + new Date().getTime()\n    );\n\n    localStorage.setItem(\"access_token\", authResult.accessToken);\n    localStorage.setItem(\"id_token\", authResult.idToken);\n    localStorage.setItem(\"expires_at\", expiresAt);\n  };\n\n  isAuthenticated() {\n    const expiresAt = JSON.parse(localStorage.getItem(\"expires_at\"));\n    return new Date().getTime() < expiresAt;\n  }\n\n  logout = () => {\n    localStorage.removeItem(\"access_token\");\n    localStorage.removeItem(\"id_token\");\n    localStorage.removeItem(\"expires_at\");\n    this.auth0.logout({\n      clientID: process.env.REACT_APP_AUTH0_CLIENT_ID,\n      returnTo: \"http://localhost:3000\"\n    });\n  }\n\n  getAccessToken = () => {\n    const accessToken = localStorage.getItem(\"access_token\");\n    if (!accessToken) {\n      throw new Error(\"No access token found.\");\n    }\n    return accessToken;\n  };\n\n  getProfile = cb => {\n    if (this.userProfile) return cb(this.userProfile);\n    this.auth0.client.userInfo(this.getAccessToken(), (err, profile) => {\n      if (profile) this.userProfile = profile;\n      cb(profile, err);\n    });\n  };\n\n}"]},"metadata":{},"sourceType":"module"}